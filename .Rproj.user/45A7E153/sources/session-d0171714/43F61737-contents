---
title: "Data Exploration and Processing"
output: 
  html_document: 
    keep_md: true
date: "2024-03-05"
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```

## Loading the Libraries

```{r}
library(tidyverse)
library(janitor)
library(naniar)
library(ggmap)
library(shiny)
library(shinydashboard)
```

## Loading the Data Set  

```{r}
dog <- read_csv(file = "../data/dogbreeddataset.xlsx - A.csv")
```

## Fixing the Headers

### Renaming the headers as the values from the first row  

```{r}
names(dog) <- dog[1,]
```

### Removing the first row in the data set  

```{r}
dog <- dog %>% 
        filter(!row_number() %in% 1) 
```

## Cleaning up the Variable Names.   

```{r}
dog <- clean_names(dog)
```

## Determining if the data is Tidy; Cleaning up the Data  

```{r}
summary(dog)
```

#### We notice that all the variables are of data class character, which is not desired for the variables `body_mass_kg`, `height_cm`.   

### Where are the NA's?   

```{r}
miss_var_summary(dog)
```

### Changing the Data Class of Certain Variables.   

```{r}
dog <- dog %>% 
        mutate(body_mass_kg = as.numeric(body_mass_kg)) %>% 
        mutate(height_cm = as.numeric(height_cm)) %>% 
        mutate(latitude = as.numeric(latitude)) %>% 
        mutate(longitude = as.numeric(longitude))
```

```{r}
#write_csv(dog, "clean_dog_data.csv") #saving the clean data
```

# Data Exploration   

## How many distinct breeds of dog are included within this data set?   

```{r}
n_distinct(dog$breed)
```

## How many distinct data points are included (in terms of body weight and height) within this data set?   

```{r}
n_distinct(dog$body_mass_kg)
```

```{r}
n_distinct(dog$height_cm)
```

This could indicate some strange method or issue in the collection of data. However, since there is no information in the paper about the method of data collection for these variables, we are assuming that the data is correct.   

## Which breed of dog has the largest body mass?    

```{r}
dog %>% 
       group_by(breed) %>% 
        summarize(mean_body_weight = mean(body_mass_kg, na.rm = T)) %>% 
        filter(mean_body_weight != "NaN") %>% 
        arrange(desc(mean_body_weight)) %>% 
        summary()
```

## Which breed of dog has the largest height?    

```{r}
dog %>% 
       group_by(breed) %>% 
        summarize(mean_height = mean(height_cm, na.rm = T)) %>% 
        filter(mean_height != "NaN") %>% 
        arrange(desc(mean_height))
```

## Which breed of dog has the smallest height?    

```{r}
dog %>% 
       group_by(breed) %>% 
        summarize(mean_height = mean(height_cm, na.rm = T)) %>% 
        filter(mean_height != "NaN") %>% 
        arrange(mean_height)
```

## How do the top 5 heaviest dogs compare by sex?       

```{r}
dog %>% 
        filter(sex != "NA") %>% 
        unite(breed_sex, "breed", "sex", sep = " ") %>% 
        filter(str_detect(.$breed_sex, "CaucasianOvcharka") | str_detect(.$breed_sex, "Boerboel") | str_detect(.$breed_sex, "EnglishMastiff") | str_detect(.$breed_sex, "SaintBernard") | str_detect(.$breed_sex, "TibetanMastiff")) %>% 
        group_by(breed_sex) %>% 
        summarize(mean_body_mass = mean(body_mass_kg, na.rm = T)) %>% 
        separate(breed_sex, into = c("breed", "sex"), sep = " ") %>% 
        ggplot(aes(x = breed, y = mean_body_mass, fill = sex)) +
        geom_col(position = "dodge") +
        labs(title = "Heaviest Dogs Compared by Sex",
             x = "Breed",
             y = "Mass (kg)",
             fill = "Sex") +
        theme(plot.title = element_text(size = rel(1.3), hjust = 0.5))
```

It seems that this dataset has strange or incomplete measurements for mass, so it may be more worthwhile to focus on height!   

## How do the top 5 largest dogs compare by sex?       

```{r}
dog %>% 
        filter(sex != "NA") %>% 
        unite(breed_sex, "breed", "sex", sep = " ") %>% 
        filter(str_detect(.$breed_sex, "GreatDane") | str_detect(.$breed_sex, "IrishWolfhound") | str_detect(.$breed_sex, "Landseer") | str_detect(.$breed_sex, "EnglishMastiff") | str_detect(.$breed_sex, "ScottishDeerhound")) %>% 
        group_by(breed_sex) %>% 
        summarize(mean_body_mass = mean(body_mass_kg, na.rm = T)) %>% 
        separate(breed_sex, into = c("breed", "sex"), sep = " ") %>% 
        ggplot(aes(x = breed, y = mean_body_mass, fill = sex)) +
        geom_col(position = "dodge") +
        labs(title = "Largest Dogs Compared by Sex",
             x = "Breed",
             y = "Height (cm)",
             fill = "Sex") +
        theme(plot.title = element_text(size = rel(1.3), hjust = 0.5))
```

This appears to show that there are also shows that there a lot of missing values in this dataset!   

## Removing NA's from Sex Variable for Future Analyses   

```{r}
dog <- dog %>% 
        filter(sex != "NA")
```

## Comparing Top Tallest Dogs versus Top Smallest Dogs by Alleles in Locations that are Important in Determining Dog Body Size    

Test Visual:   

```{r}
dog %>%
        filter(breed == "GreatDane") %>% 
        pivot_longer(cols = starts_with("chr15"),
                     names_to = "chr_location",
                     values_to = "marker_alleles_data") %>% 
        ggplot(aes(x = chr_location, fill = marker_alleles_data)) +
        geom_bar() +
        labs(title = "Great Dane Comparing Alleles at 10 Positions Associated with Size",
             x = "Position",
             y = "Count",
             fill = "Marker") +
        theme(plot.title = element_text(size = rel(1.3), hjust = 0.5), axis.text.x = element_text(angle = 60, hjust = 1)) 
```

```{r}
ui <- dashboardPage(
  dashboardHeader(title = "Dogs and Markers"),
  dashboardSidebar(disable=T),
  dashboardBody(
          
          fluidRow(
  box(title = "Plot Options", width = 3,
  radioButtons("x", "Select Height Category", choices = c("small", "large"), selected = "large"),
  ), #closes the first box
  box(title = "Dog Size and Markers", width = 8,
  plotOutput("plot", width = "500px", height = "400px")
  
  ) #closes the second box
  ) #closes the row
  ) #closes the dashboard body
) #closes the ui 

server <- function(input, output, session) {
        
        session$onSessionEnded(stopApp)
        
        output$plot <- renderPlot ({
          
        dog %>%
        mutate(height_category = case_when(height_cm <= 20.0 ~ "small",
                                           height_cm > 20.0 & height_cm < 73.0 ~ "medium",
                                           height_cm >= 73.0 ~ "large")) %>% 
        filter(height_category == "small" | height_category == "large") %>% 
        pivot_longer(cols = starts_with("chr15"),
                     names_to = "chr_location",
                     values_to = "marker_alleles_data") %>% 
        filter(height_category == input$x) %>% 
        ggplot(aes(x = chr_location, fill = marker_alleles_data)) +
        geom_bar() +
        facet_wrap(breed~.) +
        labs(title = "Dogs Compared by Alleles at 10 Positions",
             x = "Position",
             y = "Count",
             fill = "Marker") +
        theme(plot.title = element_text(size = rel(1.3), hjust = 0.5), axis.text.x = element_text(angle = 90, hjust = 1))
        
})
        
}

shinyApp(ui, server)
```

## A New Long Format Object, and Comparing Alleles in Small vs Large Dogs   

```{r}
dog_long <- dog %>%
        mutate(height_category = case_when(height_cm <= 20.0 ~ "small",
                                           height_cm > 20.0 & height_cm < 73.0 ~ "medium",
                                           height_cm >= 73.0 ~ "large")) %>% 
        filter(height_category == "small" | height_category == "large") %>% 
        pivot_longer(cols = starts_with("chr15"),
                     names_to = "chr_location",
                     values_to = "marker_alleles_data")
```

```{r}
#write_csv(dog_long, "dog_long.csv")
```

Test Visual:   

```{r}
dog_long %>%
        filter(chr_location == "chr15_41216098") %>% 
        ggplot(aes(x = height_category, fill = marker_alleles_data)) +
        geom_bar() +
        labs(title = "Largest vs Smallest Dogs",
             x = "Height Category",
             y = "Count",
             fill = "Marker") +
        theme(plot.title = element_text(size = rel(1.3), hjust = 0.5), axis.text.x = element_text(angle = 90, hjust = 1))
```

```{r}
ui <- dashboardPage(
  dashboardHeader(title = "Dogs and Markers"),
  dashboardSidebar(disable=T),
  dashboardBody(
          
          fluidRow(
  box(title = "Plot Options", width = 3,
  selectInput("x", "Select Chromosome Position", choices = unique(dog_long$chr_location), hr()),
  ), #closes the first box
  box(title = "Dog Size and Markers", width = 8,
  plotOutput("plot", width = "500px", height = "400px")
  
  ) #closes the second box
  ) #closes the row
  ) #closes the dashboard body
) #closes the ui 

server <- function(input, output, session) {
        
        session$onSessionEnded(stopApp)
        
        output$plot <- renderPlot ({
          
        dog_long %>%
        filter(chr_location == input$x) %>% 
        ggplot(aes(x = height_category, fill = marker_alleles_data)) +
        geom_bar() +
        labs(title = "Largest vs Smallest Dogs",
             x = "Height Category",
             y = "Count",
             fill = "Marker") +
        theme(plot.title = element_text(size = rel(1.3), hjust = 0.5), axis.text.x = element_text(angle = 90, hjust = 1))
        
})
        
}

shinyApp(ui, server)
```

These results show a clear association between the alleles at these positions and the size of the dogs.   

## Examining Geographic Distribution of Large and Small Dogs by Creating a Map  

```{r}
dog_long %>% 
  select(latitude, longitude) %>% 
  filter(!is.na(latitude) & !is.na(longitude)) %>%
  summary()
```
```{r}
#install.packages(mapview)
```

```{r}
library(mapview)
```

```{r}
#install.packages(sf)
```

```{r}
library(sf)
```

```{r}
#dog_gwas %>% 
        #filter(longitude != "NA" | latitude != "NA") %>%
        #mapview(xcol = "longitude", ycol = "latitude", crs = 4269)
```

```{r}
dog_gwas_sf <- dog_gwas %>% 
        filter(longitude != "NA" | latitude != "NA") %>%
        filter(longitude != "NA" | latitude != "NA") %>%
        filter(longitude != "#N/A" | latitude != "#N/A") %>%
        st_as_sf(coords = c("longitude", "latitude"), crs = 4326)
```

```{r}
mapview(dog_geographic_distribution, zcol = "height_category", legend = TRUE, map.types = "CartoDB.Positron") 
```

```{r}
#mapview(dog_gwas_sf, map.types = "CartoDB.DarkMatter") 
```


```{r}
#lat <- c(-107, 117)
#lon <- c(28, 56)
#bbox <- make_bbox(c(28, 56), c(-107, 117), f = 0.03)
```

```{r}
#latitude_dogs_europe <- c(-106, 117)
#longitude_dogs_europe <- c(28, 40)
#bbox_dogs_europe <- make_bbox(longitude_dogs_europe, latitude_dogs_europe, f = 0.03)
```

```{r}
#latitude_test <- c(-10, 10)
#longitude_test <- c(-10, 10)
#bbox_tests <- make_bbox(longitude_test, latitude_test, f = 0.03)
```

```{r}
#map <- get_stadiamap(bbox_tests, maptype = "stamen_terrain", zoom = 7)
```

```{r}
#map_dogs <- get_stadiamap(bbox, zoom = 7, maptype = "stamen_terrain")
```

```{r}
#map_dogs_europe <- get_stadiamap(bbox_dogs_europe, maptype = "stamen_terrain", zoom = 7)
```

```{r}
#ggmap(map_dogs)
```


```{r}
#ggmap(map_dogs) + 
  #geom_point(data = dog_long, aes(longitude, latitude), size = 0.4)
  #labs(x = "Longitude", y = "Latitude", title = "Shark Incident Coastal California, 1950-2022")
```


