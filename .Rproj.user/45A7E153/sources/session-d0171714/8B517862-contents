---
title: "tidy_data"
output: 
  html_document: 
    keep_md: true
date: "2024-03-12"
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```

## Loading the Libraries

```{r}
library(tidyverse)
library(janitor)
library(naniar)
library(ggmap)
library(shiny)
library(shinydashboard)
```

## Loading the Data Sets  

```{r}
dog <- read_csv(file = "../../data/dogbreeddataset.xlsx - A.csv")
```

```{r}
dog_breeds <- read_csv("../../data/dog_breeds.csv") #this dataset includes country of origin information, found on kaggle
```

## Fixing the Headers

### Renaming the headers as the values from the first row  

```{r}
names(dog) <- dog[1,]
```

### Removing the first row in the data set  

```{r}
dog <- dog %>% 
        filter(!row_number() %in% 1) 
```

## Cleaning up the variable names   

```{r}
dog <- clean_names(dog)
```

## Determining if the data is tidy and cleaning up the data  

```{r}
summary(dog)
```

#### We notice that all the variables are of data class character, which is not desired for variables including `body_mass_kg`, `height_cm`.   

## Where are the NA's?   

```{r}
miss_var_summary(dog)
```

## Changing the data class of certain variables.   

```{r}
dog <- dog %>% 
        mutate(body_mass_kg = as.numeric(body_mass_kg)) %>% 
        mutate(height_cm = as.numeric(height_cm)) %>% 
        mutate(latitude = as.numeric(latitude)) %>% 
        mutate(longitude = as.numeric(longitude))
```

## Selecting Variables of Interest

```{r}
dog <- dog %>% 
        select(!c(sample_id, type, coverage_all, coverage_x, bio_project, bio_sample, group_in_phylogenetic_analyses_d_statistics))
```

## Saving the cleaned up data set as new file     

```{r}
#write_csv(dog, "clean_dog_data.csv") #saving the clean data
```

## Creating and saving new long format object   

```{r}
dog_long <- dog %>%
        mutate(height_category = case_when(height_cm <= 20.0 ~ "small",
                                           height_cm > 20.0 & height_cm < 70.0 ~ "medium",
                                           height_cm >= 70.0 ~ "large")) %>% 
        filter(height_category == "small" | height_category == "large") %>% 
        pivot_longer(cols = starts_with("chr15"),
                     names_to = "chr_location",
                     values_to = "marker_alleles_data")
```

```{r}
#write_csv(dog_long, "dog_long.csv")
```

## Creating and saving an object with only dogs used in the GWAS.  

```{r}
dog_gwas <- filter(dog, used_for_gwas == "Yes")
```

```{r}
#write_csv(dog_gwas, "dog_gwas.csv") 
```

## Cleaning the Second Data Set

```{r}
dog_breeds <- dog_breeds %>% clean_names()
```

```{r}
dog_breeds <- dog_breeds %>% 
  mutate(across(where(is.character), str_remove_all, pattern = fixed(" "))) #removing the spaces in the `breed` variable
```

## Combining the Two Data Sets

```{r}
dogs_joined <- full_join(dog_gwas, dog_breeds, by = "breed") #joining the two datasets
```

```{r}
new_dogs_joined <- dogs_joined %>% 
  mutate(height_category = case_when(height_cm <= 20.0 ~ "small",
                                           height_cm > 20.0 & height_cm < 70.0 ~ "medium",
                                           height_cm >= 70.0 ~ "large")) %>% 
  pivot_longer(cols = starts_with("chr15"),
                     names_to = "chr_location",
                     values_to = "marker_alleles_data") %>% 
  filter(used_for_gwas == "Yes") %>% 
  select(breed, country_of_origin, body_mass_kg, height_cm, sex, igf1_as_genotype, height_category, chr_location, marker_alleles_data, common_health_problems)
```

```{r}
#write_csv(dogs_joined, "dogs_joined.csv")
```

```{r}
#write_csv(new_dogs_joined, "new_dogs_joined.csv")
```

